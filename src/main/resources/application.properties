front.url=http://localhost:3000
front.domain=localhost

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=${PD_DB_URL}
spring.datasource.username=${PD_DB_UN}
spring.datasource.password=${PD_DB_PW}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
logging.level.org.hibernate.type.descriptor.sql=trace

#logging.level.org.springframework.security.web= debug
logging.level.root=INFO
logging.file.name=/var/www/logs/pigdiary.log
logging.logback.rollingpolicy.max-file-size=1MB
logging.logback.rollingpolicy.file-name-pattern=/var/www/logs/pigdiary.%d{yyyy-MM-dd}-%i.log

# 구글
spring.security.oauth2.client.registration.google.client-id=${PD_GOOGLE_ID}
spring.security.oauth2.client.registration.google.client-secret=${PD_GOOGLE_SECRET}
# 아래 설정을 해야 loadUser 함수가 호출 된다 이유는 ...?
spring.security.oauth2.client.registration.google.scope=email

# 카카오
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-id=${PD_KAKAO_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${PD_KAKAO_SECRET}
# 사용자 정보를 수집하지 않음
#spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id